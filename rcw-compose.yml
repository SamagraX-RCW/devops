version: '3'
services:
  # vault:
  #   image: vault:1.12.3
  #   restart: always
  #   volumes:
  #     - ./vault.json:/vault/config/vault.json
  #     - ./data/vault-data:/vault/file
  #   environment:
  #     - VAULT_ADDR=${VAULT_ADDR}
  #     - VAULT_API_ADDR=${VAULT_API_ADDR}
  #     - VAULT_ADDRESS=${VAULT_ADDRESS}
  #   cap_add:
  #     - IPC_LOCK
  #   command: vault server -config=/vault/config/vault.json
  #   ports:
  #     - 8200:8200
  #   healthcheck:
  #     test:
  #       [
  #         "CMD-SHELL",
  #         "wget --spider http://127.0.0.1:8200/v1/sys/health || exit 1",
  #       ]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3

  identity:
    image: ghcr.io/samagrax-rcw/identity:latest
    ports:
      - "3332:3332"
    depends_on:
      vault:
        condition: service_healthy
      identity-db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://${IDENTITY_POSTGRES_USER}:${IDENTITY_POSTGRES_PASSWORD}@identity-db:5432/postgres
      - VAULT_ADDR=${VAULT_ADDR}
      - VAULT_TOKEN=${VAULT_TOKEN}
      - VAULT_BASE_URL=${VAULT_BASE_URL}
      - VAULT_ROOT_PATH=${VAULT_ROOT_PATH}
      - VAULT_TIMEOUT=${VAULT_TIMEOUT}
      - VAULT_PROXY=${VAULT_PROXY}
      - SIGNING_ALGORITHM=${SIGNING_ALGORITHM}
      - JWKS_URI=${JWKS_URI}
      - ENABLE_AUTH=${ENABLE_AUTH}
    healthcheck:
      test:
        [ "CMD-SHELL", "curl -f http://localhost:3332/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  identity-db:
    image: postgres:12.1-alpine
    environment:
      - POSTGRES_USER=${IDENTITY_POSTGRES_USER}
      - POSTGRES_PASSWORD=${IDENTITY_POSTGRES_PASSWORD}
    volumes:
      - ./data/identity-db:/var/lib/postgresql/dataroot
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  schema:
    image: ghcr.io/samagrax-rcw/schema:latest
    ports:
      - "3333:3333"
    depends_on:
      schema-db:
        condition: service_healthy
      identity:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://${SCHEMA_POSTGRES_USER}:${SCHEMA_POSTGRES_PASSWORD}@schema-db:5432/postgres
      - IDENTITY_BASE_URL=${IDENTITY_BASE_URL}
      - JWKS_URI=${JWKS_URI}
      - ENABLE_AUTH=${ENABLE_AUTH}
    healthcheck:
      test:
        [ "CMD-SHELL", "curl -f http://localhost:3333/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  schema-db:
    image: postgres:12.1-alpine
    environment:
      - POSTGRES_USER=${SCHEMA_POSTGRES_USER}
      - POSTGRES_PASSWORD=${SCHEMA_POSTGRES_PASSWORD}
    volumes:
      - ./data/cred-schema-ms-db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  credential:
    image: ghcr.io/samagrax-rcw/credential:latest
    ports:
      - "3000:3000"
    depends_on:
      credential-db:
        condition: service_healthy
      identity:
        condition: service_healthy
      schema:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://${CREDENTIAL_POSTGRES_USER}:${CREDENTIAL_POSTGRES_PASSWORD}@credential-db:5432/postgres
      - IDENTITY_BASE_URL=${IDENTITY_BASE_URL}
      - SCHEMA_BASE_URL=${SCHEMA_BASE_URL}
      - CREDENTIAL_SERVICE_BASE_URL=${CREDENTIAL_SERVICE_BASE_URL}
      - JWKS_URI=${JWKS_URI}
      - ENABLE_AUTH=${ENABLE_AUTH}
    healthcheck:
      test:
        [ "CMD-SHELL", "curl -f http://localhost:3000/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  credential-db:
    image: postgres:12.1-alpine
    environment:
      - POSTGRES_USER=${CREDENTIAL_POSTGRES_USER}
      - POSTGRES_PASSWORD=${CREDENTIAL_POSTGRES_PASSWORD}
    volumes:
      - ./data/credential-ms-db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  vault-data:
